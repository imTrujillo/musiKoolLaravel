name: Canciones
description: |-

  Endpoints para administrar canciones.
endpoints:
  -
    httpMethods:
      - POST
    uri: api/songs
    metadata:
      groupName: Canciones
      groupDescription: |-

        Endpoints para administrar canciones.
      subgroup: ''
      subgroupDescription: ''
      title: 'Guardar una canción.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must be at least 5 characters. Must not be greater than 20 characters.'
        required: true
        example: vmqeopfuudtdsufvy
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      bpm:
        name: bpm
        description: 'Must be at least 30. Must not be greater than 280.'
        required: true
        example: 21
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      song_scale_id:
        name: song_scale_id
        description: 'The <code>id</code> of an existing record in the song_scales table.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      song_metric_id:
        name: song_metric_id
        description: 'The <code>id</code> of an existing record in the song_metrics table.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      musical_genre_id:
        name: musical_genre_id
        description: 'The <code>id</code> of an existing record in the musical_genres table.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: vmqeopfuudtdsufvy
      bpm: 21
      user_id: 17
      song_scale_id: 17
      song_metric_id: 17
      musical_genre_id: 17
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1|tutokenfakegeneradoporSanctum'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/songs/{id}'
    metadata:
      groupName: Canciones
      groupDescription: |-

        Endpoints para administrar canciones.
      subgroup: ''
      subgroupDescription: ''
      title: 'Actualizar una canción.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the song.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must be at least 5 characters. Must not be greater than 20 characters.'
        required: true
        example: vmqeopfuudtdsufvy
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      bpm:
        name: bpm
        description: 'Must be at least 30. Must not be greater than 280.'
        required: true
        example: 21
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      song_scale_id:
        name: song_scale_id
        description: 'The <code>id</code> of an existing record in the song_scales table.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      song_metric_id:
        name: song_metric_id
        description: 'The <code>id</code> of an existing record in the song_metrics table.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      musical_genre_id:
        name: musical_genre_id
        description: 'The <code>id</code> of an existing record in the musical_genres table.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: vmqeopfuudtdsufvy
      bpm: 21
      user_id: 17
      song_scale_id: 17
      song_metric_id: 17
      musical_genre_id: 17
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1|tutokenfakegeneradoporSanctum'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/songs/{id}'
    metadata:
      groupName: Canciones
      groupDescription: |-

        Endpoints para administrar canciones.
      subgroup: ''
      subgroupDescription: ''
      title: 'Eliminar un canción.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the song.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1|tutokenfakegeneradoporSanctum'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/my-songs
    metadata:
      groupName: Canciones
      groupDescription: |-

        Endpoints para administrar canciones.
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtener mis canciones.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1|tutokenfakegeneradoporSanctum'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/songs
    metadata:
      groupName: Canciones
      groupDescription: |-

        Endpoints para administrar canciones.
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtener y filtrar canciones.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":11,"title":"vmqeopfuudtdsufvy","bpm":30,"avg_rating":null,"reviews_count":0,"chords":[]},{"id":3,"title":"Saepe esse nihil sit pariatur.","bpm":167,"avg_rating":"2.6666666666666667","reviews_count":18,"chords":["B13","C"]},{"id":8,"title":"Dicta tenetur et veniam.","bpm":112,"avg_rating":"3.1071428571428571","reviews_count":28,"chords":["D#7#11","C#sus4","E7#11","Em9","Bm7","A#add11","Cm9","Cmaj7","Fdim","F#sus4","F#maj7","F#m7","D9","Dm9","Gadd9","Dm"]},{"id":6,"title":"Aut doloremque aut ea.","bpm":225,"avg_rating":"2.6363636363636364","reviews_count":22,"chords":["Badd11","G","A#7","C#7b5","C#","C#7b9","Gmaj7","A#dim","B13b13","C7","D7","A#aug"]},{"id":2,"title":"Tempore ratione qui.","bpm":152,"avg_rating":"3.0714285714285714","reviews_count":14,"chords":["C#9","C#11","A#7#11","E11","D#sus4","G7#5"]}],"links":{"first":"http:\/\/127.0.0.1:8000\/api\/songs?page=1","last":"http:\/\/127.0.0.1:8000\/api\/songs?page=3","prev":null,"next":"http:\/\/127.0.0.1:8000\/api\/songs?page=2"},"meta":{"current_page":1,"from":1,"last_page":3,"links":[{"url":null,"label":"&laquo; Previous","page":null,"active":false},{"url":"http:\/\/127.0.0.1:8000\/api\/songs?page=1","label":"1","page":1,"active":true},{"url":"http:\/\/127.0.0.1:8000\/api\/songs?page=2","label":"2","page":2,"active":false},{"url":"http:\/\/127.0.0.1:8000\/api\/songs?page=3","label":"3","page":3,"active":false},{"url":"http:\/\/127.0.0.1:8000\/api\/songs?page=2","label":"Next &raquo;","page":2,"active":false}],"path":"http:\/\/127.0.0.1:8000\/api\/songs","per_page":5,"to":5,"total":11}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/songs/{id}'
    metadata:
      groupName: Canciones
      groupDescription: |-

        Endpoints para administrar canciones.
      subgroup: ''
      subgroupDescription: ''
      title: 'Mostrar una canción.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the song.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":1,"title":"Perferendis quam consequatur.","bpm":77,"avg_rating":null,"reviews_count":null,"chords":["Dm7b5","Fdim","C","D#dim","A#dim","Eaug7","B13b13","F#11","Gm7","C#7#9","A#m","C#11","E7"]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
