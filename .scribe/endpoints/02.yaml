name: 'Reseñas de Canciones'
description: |-

  Endpoints para dejar reseñas.
endpoints:
  -
    httpMethods:
      - POST
    uri: 'api/songs/{song_id}/reviews'
    metadata:
      groupName: 'Reseñas de Canciones'
      groupDescription: |-

        Endpoints para dejar reseñas.
      subgroup: ''
      subgroupDescription: ''
      title: 'Guardar una reseña'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      song_id:
        name: song_id
        description: 'The ID of the song.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      song_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      rating:
        name: rating
        description: 'Must be at least 1. Must not be greater than 5.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      rating: 5
      user_id: 17
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/songs/{song_id}/reviews/{id}'
    metadata:
      groupName: 'Reseñas de Canciones'
      groupDescription: |-

        Endpoints para dejar reseñas.
      subgroup: ''
      subgroupDescription: ''
      title: 'Actualizar una reseña'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      song_id:
        name: song_id
        description: 'The ID of the song.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the review.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      song_id: 1
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      rating:
        name: rating
        description: 'Must be at least 1. Must not be greater than 5.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      rating: 5
      user_id: 17
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
